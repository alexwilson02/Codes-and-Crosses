import os    
import time    

# Alex Wilson- Add menu for mode selection
mode = input("Enter game mode: '1' for Single Player, '2' for Multiplayer: ")
# Define initial game variables
board = [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ']    
player = 1    
Win = 1    
Draw = -1    
Running = 0    
Stop = 1    
Game = Running    
Mark = 'X'   

# Define different themes with color codes
themes = {
    1 : {'border': '\033[95m', 'empty': '\033[0m', 'player1': '\033[91m', 'player2': '\033[94m'},
    2 : {'border': '\033[92m', 'empty': '\033[0m', 'player1': '\033[93m', 'player2': '\033[96m'},
    3 : {'border': '\033[94m', 'empty': '\033[0m', 'player1': '\033[92m', 'player2': '\033[91m'},
    4 : {'border': '\033[93m', 'empty': '\033[0m', 'player1': '\033[95m', 'player2': '\033[94m'},
    5 : {'border': '\033[96m', 'empty': '\033[0m', 'player1': '\033[94m', 'player2': '\033[92m'},
    6 : {'border': '\033[90m', 'empty': '\033[0m', 'player1': '\033[91m', 'player2': '\033[93m'}
}  # Alex Wilson - Added more theme colors

# Function to check if a position on the board is available
def CheckPosition(x):    
    if board[x] == ' ':    
        return True    
    else:    
        return False     
        
# Function to draw the game board using the selected theme
def DrawBoard(theme):  
# Apply colors from the selected theme
    border_color = theme['border']
    empty_color = theme['empty']
    player1_color = theme['player1']
    player2_color = theme['player2']
    
  #added a border to the board game and changed "%c" to "%s" to accept string
 # Draw the game board with colored elements
    print(border_color + " _________________")
    print("|  _____________  |")
    print("| |  " + empty_color + "%s" % board[1] + border_color + " | " + empty_color + "%s" % board[2] + border_color + " | " + empty_color + "%s" % board[3] + border_color + "  | |")
    print("| | ___|___|___ | |")    
    print("| |  " + empty_color + "%s" % board[4] + border_color + " | " + empty_color + "%s" % board[5] + border_color + " | " + empty_color + "%s" % board[6] + border_color + "  | |")
    print("| | ___|___|___ | |")    
    print("| |  " + empty_color + "%s" % board[7] + border_color + " | " + empty_color + "%s" % board[8] + border_color + " | " + empty_color + "%s" % board[9] + border_color + "  | |")    
    print("| |____|___|____| |") 
    print("|_________________|" + empty_color) 

# Maylee Cianca - Function with winning combinations 
def CheckWin():
    global Game
    winning_combinations = [
        [1, 2, 3], [4, 5, 6], [7, 8, 9], 
        [1, 4, 7], [2, 5, 8], [3, 6, 9], 
        [1, 5, 9], [3, 5, 7]          
    ]
    for combo in winning_combinations:
        if board[combo[0]] == board[combo[1]] == board[combo[2]] != ' ':
            Game = Win
            return
    if ' ' not in board[1:]:
        Game = Draw
    else:
        Game = Running
   
# Added a welcome and excitement message.
print("Welcome to Tic-Tac-Toe!")
print("Get ready to enjoy some exciting rounds of Tic-Tac-Toe!")
print("May the best player win! Have fun!")

# Maylee Cianca - Print statment that will show what board we are using
print(" 1 | 2 | 3 \n___|___|___\n 4 | 5 | 6 \n___|___|___\n 7 | 8 | 9 \n")

# Added describing the rules of the game for players who haven't played the game before.
print("\nRules:\nThis is a two-player game where each player will take turns marking\n an empty square and who evers gets 3 of their mark in a row in\n any direction wins the game!")

# Prompt to choose number of rounds
rounds = int(input("\nHow many rounds do you want to play? (1 or 3): "))
    
# Instead of having "player 1 and player 2", users are able to name themselves
player_1 = input('Player 1, please enter your name: ').title()  
print('Hi', player_1 + ", you are player 1.\n")
player_2 = input('Player 2, please enter your name: ').title()
print('Hi', player_2 + ", you are player 2.\n")

# Maylee Cianca - Changed the "X" to an "M", which is the first letter of my name
# Alex Wilson - I changed the "O" to an "A" so that when I playing my opponent I am using the beginning initial to my  name instead of the traditional "O"
player1_mark = input(player_1 + " please input your mark character if you wish to customize or enter 'M': ")
player2_mark = input(player_2 + " please input your mark character if you wish to customize or enter 'A': ")
print("Player 1 [" + player1_mark + "] --- Player 2 [" + player2_mark + "]\n")    
print()    
print()    
print("Please Wait...")    
time.sleep(3)

# Prompt for theme selection
print("Select a theme:")
for theme_num, _ in themes.items():
    print(theme_num)
selected_theme = int(input("Enter the theme number: "))

# Use the selected theme when drawing the board
selected_theme = themes.get(selected_theme, themes[1])  # Default to theme 1 if an invalid theme number is entered

while(Game == Running):    
    os.system('cls')    
    DrawBoard(selected_theme)    
    if(player % 2 != 0):    
        print(player_1 + "-Player 1's chance")    
        Mark = player1_mark    
    else:    
        print(player_2 + "-Player 2's chance")    
        Mark = player2_mark    
    choice = int(input("Enter the position between [1-9] where you want to mark : "))    
    if(CheckPosition(choice)):    
        board[choice] = Mark    
        player+=1    
        CheckWin() 
        
os.system('cls')    
DrawBoard(selected_theme)    
if(Game == Draw):    
    print("It's a draw!")
elif(Game == Win):    
    player -= 1    
    if(player % 2 != 0): 
        
        print(player_1, "Has won!")
    else:    
        print(player_2,"Has won!")
